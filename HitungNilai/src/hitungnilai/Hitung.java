/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hitungnilai;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author jf
 */
public class Hitung extends javax.swing.JFrame {

    /**
     * Creates new form Hitung
     */
    public Hitung() {
        initComponents();
        
        Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();
        int x = layar.width / 2 - this.getSize().width / 2;
        int y = layar.height / 2 - this.getSize().height / 2;
        this.setLocation(x,y);
        
        displayNim.disable();
        displayNama.disable();
        displayNilai.disable();
        displayGrade.disable();
        displayMatkul.disable();
        bobotUas.disable();
        
    }
    
    //method hanya angka
    public void FilterAngka(KeyEvent b){
        if(Character.isAlphabetic(b.getKeyChar())){
            b.consume();
            JOptionPane.showMessageDialog(null, 
                    "Masukan Hanya Angka",
                    "Peringatan", JOptionPane.WARNING_MESSAGE
                    );
        }
    }
    
    //method untuk jumlah karakter pada nim
    public void JumlahKarakterNim(KeyEvent p){
        if(inputNim.getText().length()==9){
            p.consume();
            JOptionPane.showMessageDialog(null,
                   "Maksimal 8 Karakter",
                   "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    //method untuk jumlah karakter pada nama
    public void JumlahKarakterNama(KeyEvent q){
        if(inputNama.getText().length()==40){
            q.consume();
            JOptionPane.showMessageDialog(null,
                   "Maksimal 40 Karakter",
                   "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    //method untuk jumlah karakter pada presensi
    public void JumlahKarakteriPresensi(KeyEvent r){
        if(inputPresensi.getText().length() > 4){
            r.consume();
            JOptionPane.showMessageDialog(null,
                   "Maksimal 5 Karakter",
                   "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    //method untuk jumlah karakter pada tugas
    public void JumlahKarakterTugas(KeyEvent s){
        if(inputTugas.getText().length() > 4){
            s.consume();
            JOptionPane.showMessageDialog(null,
                   "Maksimal 5 Karakter",
                   "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    //method untuk jumlah karakter pada Uts
    public void JumlahKarakterUts(KeyEvent t){
        if(inputUts.getText().length() > 4){
            t.consume();
            JOptionPane.showMessageDialog(null,
                   "Maksimal 5 Karakter",
                   "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    //method untuk jumlah karakter pada Uas
    public void JumlahKarakterUas(KeyEvent u){
        if(inputUas.getText().length() > 4){
            u.consume();
            JOptionPane.showMessageDialog(null,
                   "Maksimal 5 Karakter",
                   "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    //method untuk jumlah karakter pada nama
    public void JumlahKarakterbPresensi(KeyEvent v){
        if(bobotPresensi.getText().length()==2){
            v.consume();
            JOptionPane.showMessageDialog(null,
                   "Maksimal 2 Karakter",
                   "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    //method untuk jumlah karakter pada nama
    public void JumlahKarakterbTugas(KeyEvent w){
        if(bobotTugas.getText().length()==2){
            w.consume();
            JOptionPane.showMessageDialog(null,
                   "Maksimal 2 Karakter",
                   "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    //method untuk jumlah karakter pada nama
    public void JumlahKarakterbUts(KeyEvent x){
        if(bobotUts.getText().length()==2){
            x.consume();
            JOptionPane.showMessageDialog(null,
                   "Maksimal 2 Karakter",
                   "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pilihMatkul = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        inputNim = new javax.swing.JTextField();
        inputNama = new javax.swing.JTextField();
        inputPresensi = new javax.swing.JTextField();
        inputUts = new javax.swing.JTextField();
        inputTugas = new javax.swing.JTextField();
        inputUas = new javax.swing.JTextField();
        bobotPresensi = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        bobotTugas = new javax.swing.JTextField();
        bobotUts = new javax.swing.JTextField();
        bobotUas = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        displayNim = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        displayNama = new javax.swing.JTextField();
        displayNilai = new javax.swing.JTextField();
        displayGrade = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        displayMatkul = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        hapus = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        hitung = new javax.swing.JButton();
        tutup = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel2.setText("Mata Kuliah");

        pilihMatkul.setFont(new java.awt.Font("Droid Naskh Shift Alt", 2, 16)); // NOI18N
        pilihMatkul.setForeground(new java.awt.Color(51, 51, 51));
        pilihMatkul.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Pilih Mata Kuliah-", "Analisis Algoritma", "Aljabar Linier", "Grafika Komputer", "Kewirausahaan", "Manajemen Kualitas Perangkat Lunak", "Pemrograman Berorientasi Objek", "Sistem Basis Data", "Statistik dan Probabilitas", "Praktikum Basis Data", "Praktikum Statistik" }));
        pilihMatkul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pilihMatkulActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 19)); // NOI18N
        jLabel1.setText("HITUNG NILAI MAHASISWA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addComponent(pilihMatkul, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(88, 88, 88))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pilihMatkul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Input Data");

        jLabel4.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel4.setText("Input NIM");

        jLabel5.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel5.setText("Input Nama");

        jLabel6.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel6.setText("Total Presensi Kehadiran");

        jLabel7.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel7.setText("Nilai Tugas");

        jLabel8.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel8.setText("Nilai UTS");

        jLabel9.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel9.setText("Nilai UAS");

        inputNim.setBackground(new java.awt.Color(204, 204, 204));
        inputNim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNimActionPerformed(evt);
            }
        });
        inputNim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputNimKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputNimKeyTyped(evt);
            }
        });

        inputNama.setBackground(new java.awt.Color(204, 204, 204));
        inputNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNamaActionPerformed(evt);
            }
        });
        inputNama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputNamaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputNamaKeyTyped(evt);
            }
        });

        inputPresensi.setBackground(new java.awt.Color(204, 204, 204));
        inputPresensi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPresensiActionPerformed(evt);
            }
        });
        inputPresensi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputPresensiKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputPresensiKeyTyped(evt);
            }
        });

        inputUts.setBackground(new java.awt.Color(204, 204, 204));
        inputUts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputUtsKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputUtsKeyTyped(evt);
            }
        });

        inputTugas.setBackground(new java.awt.Color(204, 204, 204));
        inputTugas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTugasActionPerformed(evt);
            }
        });
        inputTugas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputTugasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputTugasKeyTyped(evt);
            }
        });

        inputUas.setBackground(new java.awt.Color(204, 204, 204));
        inputUas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputUasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputUasKeyTyped(evt);
            }
        });

        bobotPresensi.setBackground(new java.awt.Color(204, 204, 204));
        bobotPresensi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bobotPresensiActionPerformed(evt);
            }
        });
        bobotPresensi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bobotPresensiKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bobotPresensiKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel16.setText("Bobot Absensi (10-20)");

        jLabel17.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel17.setText("Bobot Tugas (20-40)");

        jLabel18.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel18.setText("Bobot UTS (20-30)");

        jLabel19.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel19.setText("Bobot UAS");

        bobotTugas.setBackground(new java.awt.Color(204, 204, 204));
        bobotTugas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bobotTugasActionPerformed(evt);
            }
        });
        bobotTugas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bobotTugasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bobotTugasKeyTyped(evt);
            }
        });

        bobotUts.setBackground(new java.awt.Color(204, 204, 204));
        bobotUts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bobotUtsActionPerformed(evt);
            }
        });
        bobotUts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bobotUtsKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bobotUtsKeyTyped(evt);
            }
        });

        bobotUas.setFont(new java.awt.Font("Droid Naskh Shift Alt", 0, 14)); // NOI18N
        bobotUas.setForeground(new java.awt.Color(51, 51, 51));
        bobotUas.setText("30%");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputNim, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(inputUts, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(inputUas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(inputTugas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel17))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(inputPresensi, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel16)))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bobotPresensi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bobotTugas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bobotUts, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bobotUas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(5, 5, 5))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(inputNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(inputPresensi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bobotPresensi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(inputTugas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(bobotTugas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(inputUts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(bobotUts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(inputUas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(bobotUas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Display Data");

        jLabel11.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel11.setText("NIM");

        displayNim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayNimActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel12.setText("Nama");

        jLabel13.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel13.setText("Nilai Akhir");

        jLabel14.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel14.setText("Grade Nilai");

        displayNilai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayNilaiActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 14)); // NOI18N
        jLabel15.setText("Mata Kuliah");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(displayNim, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(displayGrade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addComponent(displayNilai, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(displayNama, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                    .addComponent(displayMatkul))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(displayNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(displayNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(displayNilai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(displayGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(displayMatkul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        hapus.setBackground(new java.awt.Color(102, 102, 102));
        hapus.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        hapus.setForeground(new java.awt.Color(255, 255, 255));
        hapus.setText("HAPUS");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        reset.setBackground(new java.awt.Color(102, 102, 102));
        reset.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        reset.setForeground(new java.awt.Color(255, 255, 255));
        reset.setText("RESET");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        hitung.setBackground(new java.awt.Color(51, 51, 51));
        hitung.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        hitung.setForeground(new java.awt.Color(255, 255, 255));
        hitung.setText("HITUNG");
        hitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitungActionPerformed(evt);
            }
        });

        tutup.setBackground(new java.awt.Color(255, 0, 0));
        tutup.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        tutup.setForeground(new java.awt.Color(255, 255, 255));
        tutup.setText("TUTUP");
        tutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(hapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(hitung, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tutup, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(tutup, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(hitung, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputNimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNimActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_inputNimActionPerformed

    private void inputNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNamaActionPerformed

    private void displayNimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayNimActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_displayNimActionPerformed

    private void hitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitungActionPerformed
        // TODO add your handling code here:
        String pilihMatkulValue = (String) pilihMatkul.getSelectedItem();
        
        // Mengambil nilai dari TextField untuk bobot dan input
        String inputPresensiStr = inputPresensi.getText();
        String inputTugasStr = inputTugas.getText();
        String inputUtsStr = inputUts.getText();
        String inputUasStr = inputUas.getText();
        String bobotPresensiStr = bobotPresensi.getText();
        String bobotTugasStr = bobotTugas.getText();
        String bobotUtsStr = bobotUts.getText();

    // Memeriksa apakah semua field telah terisi
    if (inputPresensiStr.isEmpty() || inputTugasStr.isEmpty() || inputUtsStr.isEmpty() ||
        inputUasStr.isEmpty() || bobotPresensiStr.isEmpty() || bobotTugasStr.isEmpty() ||
        bobotUtsStr.isEmpty()) {

        JOptionPane.showMessageDialog(null,
                "Pastikan semua input nilai dan bobot telah terisi.",
                "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;  // Menghentikan eksekusi lebih lanjut karena data belum lengkap
    }
    
        //button matkul
    if (pilihMatkulValue.equals("-Pilih Mata Kuliah-")) {
        displayMatkul.setText("");
    }else if(pilihMatkul.getSelectedItem()=="Analisis Algoritma"){
        displayMatkul.setText("Analisis Algoritma");
    }else if(pilihMatkul.getSelectedItem()=="Aljabar Linier"){
        displayMatkul.setText("Aljabar Linier");
    }else if(pilihMatkul.getSelectedItem()=="Grafika Komputer"){
        displayMatkul.setText("Grafika Komputer");
    }else if(pilihMatkul.getSelectedItem()=="Kewirausahaan"){
        displayMatkul.setText("Kewirausahaan");
    }else if(pilihMatkul.getSelectedItem()=="Manajemen Kualitas Perangkat Lunak"){
        displayMatkul.setText("Manajemen Kualitas Perangkat Lunak");
    }else if(pilihMatkul.getSelectedItem()=="Pemrograman Berorientasi Objek"){
        displayMatkul.setText("Pemrograman Berorientasi Objek");
    }else if(pilihMatkul.getSelectedItem()=="Sistem Basis Data"){
        displayMatkul.setText("Sistem Basis Data");
    }else if(pilihMatkul.getSelectedItem()=="Statistik dan Probabilitas"){
        displayMatkul.setText("Statistik dan Probabilitas");
    }else if(pilihMatkul.getSelectedItem()=="Praktikum Basis Data"){
        displayMatkul.setText("Praktikum Basis Data");
    }else{
        displayMatkul.setText("Praktikum Statistik");
        }
    
    // Mendapatkan nilai dari TextField untuk bobot dan input
    double bobotPresensi1 = Double.parseDouble(bobotPresensi.getText());
    double inputPresensi1 = Double.parseDouble(inputPresensi.getText());

    double bobotTugas2 = Double.parseDouble(bobotTugas.getText());
    double inputTugas2 = Double.parseDouble(inputTugas.getText());

    double bobotUts3 = Double.parseDouble(bobotUts.getText());
    double inputUts3 = Double.parseDouble(inputUts.getText());

    // Bobot UAS diatur ke 30
    double bobotUas4 = 30.0;
    double inputUas4 = Double.parseDouble(inputUas.getText());
    
    double totalBobot = bobotPresensi1 + bobotTugas2 + bobotUts3 + bobotUas4;

    // Memeriksa apakah total bobot lebih dari 100
    if (totalBobot > 100) {
        JOptionPane.showMessageDialog(null,
                "Total bobot tidak boleh melebihi 100.",
                "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;  // Menghentikan eksekusi lebih lanjut karena total bobot tidak valid
    }
    
//    // Menghitung Nilai_akhir
//    double nilaiAkhir = (bobotPresensi1 * inputPresensi1 / 100.0) + (bobotTugas2 * inputTugas2 / 100.0) + (bobotUts3 * inputUts3 / 100.0) + (bobotUas4 * inputUas4 / 100.0);
//
//    // Menampilkan Nilai_akhir di TextField displayNilai
//    displayNilai.setText(String.valueOf(nilaiAkhir));

// Menghitung Nilai_akhir
    double nilaiAkhir = (bobotPresensi1 * inputPresensi1 / 100.0) + (bobotTugas2 * inputTugas2 / 100.0) + (bobotUts3 * inputUts3 / 100.0) + (bobotUas4 * inputUas4 / 100.0);

    // Format nilaiAkhir dengan dua digit di belakang koma
    DecimalFormat df = new DecimalFormat("#.##");
    String formattedNilaiAkhir = df.format(nilaiAkhir);
    
    // Menampilkan Nilai_akhir di TextField displayNilai
    displayNilai.setText(formattedNilaiAkhir);
    
    // Menentukan grade berdasarkan nilaiAkhir
    String grade;
    if (nilaiAkhir >= 80) {
        grade = "A";
    } else if (nilaiAkhir >= 65) {
        grade = "B";
    } else if (nilaiAkhir >= 55) {
        grade = "C";
    } else if (nilaiAkhir >= 40) {
        grade = "D";
    } else {
        grade = "E";
    }

    // Menampilkan grade di TextField displayGrade
    displayGrade.setText(grade);
    }//GEN-LAST:event_hitungActionPerformed

    private void tutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutupActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null,
                "Apakah Yakin Akan Menutup Aplikasi?",
                "Konfirmasi",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_tutupActionPerformed

    private void inputPresensiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPresensiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPresensiActionPerformed

    private void inputTugasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTugasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTugasActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here: hapus semua
        inputNim.setText("");
        inputNama.setText("");
        inputPresensi.setText("");
        inputTugas.setText("");
        inputUts.setText("");
        inputUas.setText("");
        bobotPresensi.setText("");
        bobotTugas.setText("");
        bobotUts.setText("");
        displayNim.setText("");
        displayNama.setText("");
        displayNilai.setText("");
        displayGrade.setText("");
        displayMatkul.setText("");
        
    }//GEN-LAST:event_resetActionPerformed

    private void displayNilaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayNilaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayNilaiActionPerformed

    private void pilihMatkulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pilihMatkulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pilihMatkulActionPerformed

    private void bobotUtsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bobotUtsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bobotUtsActionPerformed

    private void bobotTugasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bobotTugasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bobotTugasActionPerformed

    private void bobotPresensiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bobotPresensiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bobotPresensiActionPerformed

    private void bobotPresensiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bobotPresensiKeyTyped
        // TODO add your handling code here:
        JumlahKarakterbPresensi(evt);
        FilterAngka(evt);
        //filter 20
        char c = evt.getKeyChar();

        // Mengecek apakah karakter yang dimasukkan adalah digit
        if (!Character.isDigit(c) && c != '\b') {
            evt.consume(); // Mengabaikan karakter yang tidak valid selain backspace
        } else {
            // Mengambil nilai angka dari TextField
            String cekText = bobotPresensi.getText();

            // Jika teks tidak kosong, lanjutkan dengan pemeriksaan nilai
            if (!cekText.isEmpty()) {
                try {
                    int nilaiAngka = Integer.parseInt(cekText + c);

                    // Mengecek apakah nilai lebih dari 20
                    if (nilaiAngka > 20) {
                        evt.consume(); // Mengabaikan karakter jika nilai tidak diizinkan
                        JOptionPane.showMessageDialog(null,
                                "Bobot Tugas tidak boleh lebih dari 20.",
                                "Peringatan", JOptionPane.WARNING_MESSAGE);
                    }
                } catch (NumberFormatException ex) {
                    // Handle exception jika parsing gagal
                    System.out.println("Read: " + ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_bobotPresensiKeyTyped

    private void bobotTugasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bobotTugasKeyTyped
        // TODO add your handling code here:
        JumlahKarakterbTugas(evt);
        FilterAngka(evt);
        
        char d = evt.getKeyChar();

        // Mengecek apakah karakter yang dimasukkan adalah digit
        if (!Character.isDigit(d) && d != '\b') {
            evt.consume(); // Mengabaikan karakter yang tidak valid selain backspace
        } else {
            // Mengambil nilai angka dari TextField
            String cekText2 = bobotTugas.getText();

            // Jika teks tidak kosong, lanjutkan dengan pemeriksaan nilai
            if (!cekText2.isEmpty()) {
                try {
                    int nilaiAngka2 = Integer.parseInt(cekText2 + d);

                    // Mengecek apakah nilai lebih dari 40
                    if (nilaiAngka2 > 40) {
                        evt.consume(); // Mengabaikan karakter jika nilai tidak diizinkan
                        JOptionPane.showMessageDialog(null,
                                "Bobot Tugas tidak boleh lebih dari 40.",
                                "Peringatan", JOptionPane.WARNING_MESSAGE);
                    }
                } catch (NumberFormatException ex) {
                    // Handle exception jika parsing gagal
                    System.out.println("Read: " + ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_bobotTugasKeyTyped

    private void bobotUtsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bobotUtsKeyTyped
        // TODO add your handling code here:
        JumlahKarakterbUts(evt);
        FilterAngka(evt);
        
        char e = evt.getKeyChar();

    // Mengecek apakah karakter yang dimasukkan adalah digit
    if (!Character.isDigit(e) && e != '\b') {
        // Mengecek apakah karakter adalah backspace
            evt.consume(); // Mengabaikan karakter yang tidak valid selain backspace
            
    } else {
        // Mengambil nilai angka dari TextField
        String cekText3 = bobotUts.getText();

        // Jika teks tidak kosong, lanjutkan dengan pemeriksaan nilai
        if (!cekText3.isEmpty()) {
            int nilaiAngka3 = Integer.parseInt(cekText3 + e);

            // Mengecek apakah nilai lebih dari 30
            if (nilaiAngka3 > 30) {
                evt.consume(); // Mengabaikan karakter jika nilai tidak diizinkan
                JOptionPane.showMessageDialog(null,
                        "Bobot UTS tidak boleh lebih dari 30.",
                        "Peringatan", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_bobotUtsKeyTyped

    private void inputNimKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputNimKeyTyped
        // TODO add your handling code here:
        JumlahKarakterNim(evt);
        FilterAngka(evt);
        
        char e = evt.getKeyChar();

        // Mengecek apakah karakter yang dimasukkan adalah digit
        if (!Character.isDigit(e) && e != '\b') {
            // Mengecek apakah karakter adalah backspace
            evt.consume(); // Mengabaikan karakter yang tidak valid selain backspace
        } else {
            // Mengambil nilai angka dari TextField
            String cekText3 = bobotUts.getText();

            // Jika teks tidak kosong, lanjutkan dengan pemeriksaan nilai
            if (!cekText3.isEmpty()) {
                try {
                    int nilaiAngka3 = Integer.parseInt(cekText3 + e);

                    // Mengecek apakah nilai lebih dari 30
                    if (nilaiAngka3 > 30) {
                        evt.consume(); // Mengabaikan karakter jika nilai tidak diizinkan
                        JOptionPane.showMessageDialog(null,
                                "Bobot UTS tidak boleh lebih dari 30.",
                                "Peringatan", JOptionPane.WARNING_MESSAGE);
                    }
                } catch (NumberFormatException ex) {
                    // Handle exception jika parsing gagal
                    System.out.println("Read: " + ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_inputNimKeyTyped

    private void inputNimKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputNimKeyReleased
        // TODO add your handling code here:
        String nim = inputNim.getText();
        //menampilkan nim
        displayNim.setText(nim);
        //enter
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        inputNama.requestFocusInWindow();
        }
    }//GEN-LAST:event_inputNimKeyReleased

    private void inputNamaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputNamaKeyReleased
        // TODO add your handling code here:
        String nama = inputNama.getText();
        //menampilkan input nama
        displayNama.setText(nama);
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        bobotPresensi.requestFocusInWindow();
        }
    }//GEN-LAST:event_inputNamaKeyReleased

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
        inputPresensi.setText("");
        inputTugas.setText("");
        inputUts.setText("");
        inputUas.setText("");
        bobotPresensi.setText("");
        bobotTugas.setText("");
        bobotUts.setText("");
        displayNilai.setText("");
        displayGrade.setText("");
    }//GEN-LAST:event_hapusActionPerformed

    private void inputPresensiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputPresensiKeyTyped
        // TODO add your handling code here:
        JumlahKarakteriPresensi(evt);
        FilterAngka(evt);
        
        char e = evt.getKeyChar();

        // Mengecek apakah karakter yang dimasukkan adalah digit atau titik
        if (!Character.isDigit(e) && e != '\b' && e != '.') {
            // Mengecek apakah karakter adalah backspace
            evt.consume(); // Mengabaikan karakter yang tidak valid selain backspace

        } else {
            // Mengambil nilai dari TextField
            String cekText3 = inputPresensi.getText();

            // Melakukan parsing sebagai bilangan desimal
            try {
                double nilaiAngka3 = Double.parseDouble(cekText3 + e);

                // Mengecek apakah nilai lebih dari 100
                if (nilaiAngka3 > 100) {
                    evt.consume(); // Mengabaikan karakter jika nilai tidak diizinkan
                    JOptionPane.showMessageDialog(null,
                            "Input Presensi tidak boleh lebih dari 100.",
                            "Peringatan", JOptionPane.WARNING_MESSAGE);
                }
            } catch (NumberFormatException ex) {
                // Handle exception, misalnya menampilkan pesan kesalahan
                System.out.println("Read: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_inputPresensiKeyTyped

    private void inputTugasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTugasKeyTyped
        // TODO add your handling code here:
        JumlahKarakterTugas(evt);
        FilterAngka(evt);
        
        char e = evt.getKeyChar();

        // Mengecek apakah karakter yang dimasukkan adalah digit atau titik
        if (!Character.isDigit(e) && e != '\b' && e != '.') {
            // Mengecek apakah karakter adalah backspace
            evt.consume(); // Mengabaikan karakter yang tidak valid selain backspace

        } else {
            // Mengambil nilai dari TextField
            String cekText3 = inputTugas.getText();

            // Melakukan parsing sebagai bilangan desimal
            try {
                double nilaiAngka3 = Double.parseDouble(cekText3 + e);

                // Mengecek apakah nilai lebih dari 100.0
                if (nilaiAngka3 > 100) {
                    evt.consume(); // Mengabaikan karakter jika nilai tidak diizinkan
                    JOptionPane.showMessageDialog(null,
                            "Input Presensi tidak boleh lebih dari 100.",
                            "Peringatan", JOptionPane.WARNING_MESSAGE);
                }
            } catch (NumberFormatException ex) {
                // Handle exception, misalnya menampilkan pesan kesalahan
                System.out.println("Read: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_inputTugasKeyTyped

    private void inputUtsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputUtsKeyTyped
        // TODO add your handling code here:
        JumlahKarakterUts(evt);
        FilterAngka(evt);
        
        char e = evt.getKeyChar();

        // Mengecek apakah karakter yang dimasukkan adalah digit atau titik
        if (!Character.isDigit(e) && e != '\b' && e != '.') {
            // Mengecek apakah karakter adalah backspace
            evt.consume(); // Mengabaikan karakter yang tidak valid selain backspace

        } else {
            // Mengambil nilai dari TextField
            String cekText3 = inputUts.getText();

            // Melakukan parsing sebagai bilangan desimal
            try {
                double nilaiAngka3 = Double.parseDouble(cekText3 + e);

                // Mengecek apakah nilai lebih dari 100.0
                if (nilaiAngka3 > 100) {
                    evt.consume(); // Mengabaikan karakter jika nilai tidak diizinkan
                    JOptionPane.showMessageDialog(null,
                            "Input Presensi tidak boleh lebih dari 100.",
                            "Peringatan", JOptionPane.WARNING_MESSAGE);
                }
            } catch (NumberFormatException ex) {
                // Handle exception, misalnya menampilkan pesan kesalahan
                System.out.println("Read: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_inputUtsKeyTyped

    private void inputUasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputUasKeyTyped
        // TODO add your handling code here:
        JumlahKarakterUas(evt);
        FilterAngka(evt);
        
        char e = evt.getKeyChar();

        // Mengecek apakah karakter yang dimasukkan adalah digit atau titik
        if (!Character.isDigit(e) && e != '\b' && e != '.') {
            // Mengecek apakah karakter adalah backspace
            evt.consume(); // Mengabaikan karakter yang tidak valid selain backspace

        } else {
            // Mengambil nilai dari TextField
            String cekText3 = inputUas.getText();

            // Melakukan parsing sebagai bilangan desimal
            try {
                double nilaiAngka3 = Double.parseDouble(cekText3 + e);

                // Mengecek apakah nilai lebih dari 100.0
                if (nilaiAngka3 > 100) {
                    evt.consume(); // Mengabaikan karakter jika nilai tidak diizinkan
                    JOptionPane.showMessageDialog(null,
                            "Input Presensi tidak boleh lebih dari 100.",
                            "Peringatan", JOptionPane.WARNING_MESSAGE);
                }
            } catch (NumberFormatException ex) {
                // Handle exception, misalnya menampilkan pesan kesalahan
                System.out.println("Read: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_inputUasKeyTyped

    private void inputNamaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputNamaKeyTyped
        // TODO add your handling code here:
        JumlahKarakterNama(evt);
        
        char c = evt.getKeyChar();

        // Mengecek apakah karakter yang dimasukkan adalah huruf atau spasi
        if (!Character.isLetter(c) && !Character.isWhitespace(c)) {
            // Mengecek apakah karakter adalah backspace
            if (c != '\b') {
                try {
                    evt.consume(); // Mengabaikan karakter yang tidak valid selain backspace
                    JOptionPane.showMessageDialog(null,
                            "Masukkan hanya karakter huruf.",
                            "Peringatan", JOptionPane.WARNING_MESSAGE);
                } catch (Exception ex) {
                    // Handle exception jika terjadi kesalahan
                    System.out.println("Read: " + ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_inputNamaKeyTyped

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyReleased

    private void bobotPresensiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bobotPresensiKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        bobotTugas.requestFocusInWindow();
        }
    }//GEN-LAST:event_bobotPresensiKeyReleased

    private void bobotTugasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bobotTugasKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        bobotUts.requestFocusInWindow();
        }
    }//GEN-LAST:event_bobotTugasKeyReleased

    private void bobotUtsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bobotUtsKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        inputPresensi.requestFocusInWindow();
        }
    }//GEN-LAST:event_bobotUtsKeyReleased

    private void inputPresensiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputPresensiKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        inputTugas.requestFocusInWindow();
        }
    }//GEN-LAST:event_inputPresensiKeyReleased

    private void inputTugasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTugasKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        inputUts.requestFocusInWindow();
        }
    }//GEN-LAST:event_inputTugasKeyReleased

    private void inputUtsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputUtsKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        inputUas.requestFocusInWindow();
        }
    }//GEN-LAST:event_inputUtsKeyReleased

    private void inputUasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputUasKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        hitung.requestFocusInWindow();
        }
    }//GEN-LAST:event_inputUasKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hitung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hitung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hitung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hitung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hitung().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bobotPresensi;
    private javax.swing.JTextField bobotTugas;
    private javax.swing.JTextField bobotUas;
    private javax.swing.JTextField bobotUts;
    private javax.swing.JTextField displayGrade;
    private javax.swing.JTextField displayMatkul;
    private javax.swing.JTextField displayNama;
    private javax.swing.JTextField displayNilai;
    private javax.swing.JTextField displayNim;
    private javax.swing.JButton hapus;
    private javax.swing.JButton hitung;
    private javax.swing.JTextField inputNama;
    private javax.swing.JTextField inputNim;
    private javax.swing.JTextField inputPresensi;
    private javax.swing.JTextField inputTugas;
    private javax.swing.JTextField inputUas;
    private javax.swing.JTextField inputUts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JComboBox<String> pilihMatkul;
    private javax.swing.JButton reset;
    private javax.swing.JButton tutup;
    // End of variables declaration//GEN-END:variables
}
